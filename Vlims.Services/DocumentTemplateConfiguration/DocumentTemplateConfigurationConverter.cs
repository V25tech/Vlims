//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Sheet1.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    using VAMLIbrary.Core.Extentions;
    
    
    
    // Comment
    public static class DocumentTemplateConfigurationConverter
    {
        
        public static List<DocumentTemplateConfiguration> SetAllDocumentTemplateConfiguration(DataSet dataset)
        {
            try
            {
                List<DocumentTemplateConfiguration> result = new List<DocumentTemplateConfiguration>();
                DocumentTemplateConfiguration documentTemplateConfigurationData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        documentTemplateConfigurationData = new DocumentTemplateConfiguration();
                        documentTemplateConfigurationData.DTID = Convert.ToString(row[DocumentTemplateConfigurationConstants.DTID.TrimAt()]);
                        documentTemplateConfigurationData.DocumentMasterId = Convert.ToString(row[DocumentTemplateConfigurationConstants.DocumentMasterId.TrimAt()]);
                        documentTemplateConfigurationData.Templatename = Convert.ToString(row[DocumentTemplateConfigurationConstants.Templatename.TrimAt()]);
                        documentTemplateConfigurationData.Uniquecode = Convert.ToString(row[DocumentTemplateConfigurationConstants.Uniquecode.TrimAt()]);
                        documentTemplateConfigurationData.documenttype = Convert.ToString(row[DocumentTemplateConfigurationConstants.documenttype.TrimAt()]);
                        documentTemplateConfigurationData.header = Convert.ToString(row[DocumentTemplateConfigurationConstants.header.TrimAt()]);
                        documentTemplateConfigurationData.rows = Convert.ToString(row[DocumentTemplateConfigurationConstants.rows.TrimAt()]);
                        documentTemplateConfigurationData.columns = Convert.ToString(row[DocumentTemplateConfigurationConstants.columns.TrimAt()]);
                        documentTemplateConfigurationData.footer = Convert.ToString(row[DocumentTemplateConfigurationConstants.footer.TrimAt()]);
                        documentTemplateConfigurationData.rows = Convert.ToString(row[DocumentTemplateConfigurationConstants.rows.TrimAt()]);
                        documentTemplateConfigurationData.columns = Convert.ToString(row[DocumentTemplateConfigurationConstants.columns.TrimAt()]);
                        documentTemplateConfigurationData.CreatedBy = Convert.ToString(row[DocumentTemplateConfigurationConstants.CreatedBy.TrimAt()]);
                        documentTemplateConfigurationData.CreatedDate = DatatypeConverter.SetDateTime(row[DocumentTemplateConfigurationConstants.CreatedDate.TrimAt()]);
                        documentTemplateConfigurationData.ModifiedBy = Convert.ToString(row[DocumentTemplateConfigurationConstants.ModifiedBy.TrimAt()]);
                        documentTemplateConfigurationData.ModifiedDate = DatatypeConverter.SetDateTime(row[DocumentTemplateConfigurationConstants.ModifiedDate.TrimAt()]);
                        result.Add(documentTemplateConfigurationData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static DocumentTemplateConfiguration SetDocumentTemplateConfiguration(DataSet dataset)
        {
            var result = SetAllDocumentTemplateConfiguration(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
    }
}
