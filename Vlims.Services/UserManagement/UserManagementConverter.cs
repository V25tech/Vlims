//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Sheet1.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    using VAMLIbrary.Core.Extentions;
    
    
    
    // Comment
    public static class UserManagementConverter
    {
        
        public static List<UserManagement> SetAllUserManagement(DataSet dataset)
        {
            try
            {
                List<UserManagement> result = new List<UserManagement>();
                UserManagement userManagementData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        userManagementData = new UserManagement();
                        userManagementData.UMId = Convert.ToString(row[UserManagementConstants.UMId.TrimAt()]);
                        userManagementData.AdminManagerId = Convert.ToString(row[UserManagementConstants.AdminManagerId.TrimAt()]);
                        userManagementData.UserConfiguration = Convert.ToString(row[UserManagementConstants.UserConfiguration.TrimAt()]);
                        userManagementData.Status = Convert.ToString(row[UserManagementConstants.Status.TrimAt()]);
                        userManagementData.UserGroupConfiguration = Convert.ToString(row[UserManagementConstants.UserGroupConfiguration.TrimAt()]);
                        userManagementData.AuditLogs = Convert.ToString(row[UserManagementConstants.AuditLogs.TrimAt()]);
                        userManagementData.CreatedBy = Convert.ToString(row[UserManagementConstants.CreatedBy.TrimAt()]);
                        userManagementData.CreatedDate = DatatypeConverter.SetDateTime(row[UserManagementConstants.CreatedDate.TrimAt()]);
                        userManagementData.ModifiedBy = Convert.ToString(row[UserManagementConstants.ModifiedBy.TrimAt()]);
                        userManagementData.ModifiedDate = DatatypeConverter.SetDateTime(row[UserManagementConstants.ModifiedDate.TrimAt()]);
                        result.Add(userManagementData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static UserManagement SetUserManagement(DataSet dataset)
        {
            var result = SetAllUserManagement(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
    }
}
