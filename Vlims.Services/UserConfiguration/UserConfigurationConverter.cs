//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vlims.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    using VAMLIbrary.Core.Extentions;
    using Vlims.Entities;



    // Comment
    public static class UserConfigurationConverter
    {
        
        public static List<UserConfiguration> SetAllUserConfiguration(DataSet dataset)
        {
            try
            {
                List<UserConfiguration> result = new List<UserConfiguration>();
                UserConfiguration userConfigurationData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        userConfigurationData = new UserConfiguration();
                        userConfigurationData.UCFId = Convert.ToString(row[UserConfigurationConstants.UCFId.TrimAt()]);
                        userConfigurationData.UserManagementID = Convert.ToString(row[UserConfigurationConstants.UserManagementID.TrimAt()]);
                        userConfigurationData.FirstName = Convert.ToString(row[UserConfigurationConstants.FirstName.TrimAt()]);
                        userConfigurationData.LastName = Convert.ToString(row[UserConfigurationConstants.LastName.TrimAt()]);
                        userConfigurationData.UserID = Convert.ToString(row[UserConfigurationConstants.UserID.TrimAt()]);
                        userConfigurationData.Department = Convert.ToString(row[UserConfigurationConstants.Department.TrimAt()]);
                        userConfigurationData.Role = Convert.ToString(row[UserConfigurationConstants.Role.TrimAt()]);
                        userConfigurationData.Doj = Convert.ToString(row[UserConfigurationConstants.Doj.TrimAt()]);
                        userConfigurationData.Empid = DatatypeConverter.SetIntValue(row[UserConfigurationConstants.Empid.TrimAt()]);
                        userConfigurationData.EmailId = Convert.ToString(row[UserConfigurationConstants.EmailId.TrimAt()]);
                        userConfigurationData.Activedirectory = Convert.ToString(row[UserConfigurationConstants.Activedirectory.TrimAt()]);
                        userConfigurationData.Standarduser = Convert.ToString(row[UserConfigurationConstants.Standarduser.TrimAt()]);
                        userConfigurationData.CreatedBy = Convert.ToString(row[UserConfigurationConstants.CreatedBy.TrimAt()]);
                        userConfigurationData.CreatedDate = DatatypeConverter.SetDateTime(row[UserConfigurationConstants.CreatedDate.TrimAt()]);
                        userConfigurationData.ModifiedBy = Convert.ToString(row[UserConfigurationConstants.ModifiedBy.TrimAt()]);
                        userConfigurationData.ModifiedDate = DatatypeConverter.SetDateTime(row[UserConfigurationConstants.ModifiedDate.TrimAt()]);
                        result.Add(userConfigurationData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static UserConfiguration SetUserConfiguration(DataSet dataset)
        {
            var result = SetAllUserConfiguration(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
        
        public static DataTable SetDataSet(List<UserConfiguration> userConfigurations)
        {
            DataTable dataTable = new DataTable();
            DataRow row = null;
            SetDataTableColumns(dataTable);
            try
            {
                if (userConfigurations != null && userConfigurations.Count > 0)
                {
                    for (int i = 0; (i < userConfigurations.Count); i = (i + 1))
                    {
                        row = dataTable.NewRow();
                        row[UserConfigurationConstants.UCFId.TrimAt()] = userConfigurations[i].UCFId;
                        row[UserConfigurationConstants.UserManagementID.TrimAt()] = userConfigurations[i].UserManagementID;
                        row[UserConfigurationConstants.FirstName.TrimAt()] = userConfigurations[i].FirstName;
                        row[UserConfigurationConstants.LastName.TrimAt()] = userConfigurations[i].LastName;
                        row[UserConfigurationConstants.UserID.TrimAt()] = userConfigurations[i].UserID;
                        row[UserConfigurationConstants.Department.TrimAt()] = userConfigurations[i].Department;
                        row[UserConfigurationConstants.Role.TrimAt()] = userConfigurations[i].Role;
                        row[UserConfigurationConstants.Doj.TrimAt()] = userConfigurations[i].Doj;
                        row[UserConfigurationConstants.Empid.TrimAt()] = userConfigurations[i].Empid;
                        row[UserConfigurationConstants.EmailId.TrimAt()] = userConfigurations[i].EmailId;
                        row[UserConfigurationConstants.Activedirectory.TrimAt()] = userConfigurations[i].Activedirectory;
                        row[UserConfigurationConstants.Standarduser.TrimAt()] = userConfigurations[i].Standarduser;
                        row[UserConfigurationConstants.CreatedBy.TrimAt()] = userConfigurations[i].CreatedBy;
                        row[UserConfigurationConstants.CreatedDate.TrimAt()] = userConfigurations[i].CreatedDate;
                        row[UserConfigurationConstants.ModifiedBy.TrimAt()] = userConfigurations[i].ModifiedBy;
                        row[UserConfigurationConstants.ModifiedDate.TrimAt()] = userConfigurations[i].ModifiedDate;
                        dataTable.Rows.Add(row);
                    }
                }
                return dataTable;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        private static void SetDataTableColumns(DataTable dataTable)
        {
            dataTable.TableName = "UT_UserConfiguration_PSY";
            dataTable.Columns.Add(UserConfigurationConstants.UCFId.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.UserManagementID.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.FirstName.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.LastName.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.UserID.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.Department.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.Role.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.Doj.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.Empid.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.EmailId.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.Activedirectory.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.Standarduser.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.CreatedBy.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.CreatedDate.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.ModifiedBy.TrimAt());
            dataTable.Columns.Add(UserConfigurationConstants.ModifiedDate.TrimAt());
        }
    }
}
