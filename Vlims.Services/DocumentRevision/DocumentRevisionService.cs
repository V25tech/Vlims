//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Sheet1.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    
    
    using PolicySummary.Sheet1.Data;
    
    
    // Comment
    public class DocumentRevisionService : IDocumentRevisionService
    {
        
        private readonly IDocumentRevisionData documentRevisionData;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="documentRevisionData"></param>
        public DocumentRevisionService(IDocumentRevisionData documentRevisionData)
        {
            this.documentRevisionData = documentRevisionData;
        }
        
        public ResponseContext<DocumentRevision> GetAllDocumentRevision(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = documentRevisionData.GetAllDocumentRevision(requestContext);
                List<DocumentRevision> result = DocumentRevisionConverter.SetAllDocumentRevision(dataset);
                return new ResponseContext<DocumentRevision>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public DocumentRevision GetDocumentRevisionByDRId(string dRId)
        {
            try
            {
                DataSet dataset = documentRevisionData.GetDocumentRevisionByDRId(dRId);
                DocumentRevision result = DocumentRevisionConverter.SetDocumentRevision(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool SaveDocumentRevision(DocumentRevision documentRevision)
        {
            try
            {
                String validationMessages = DocumentRevisionValidator.IsValidDocumentRevision(documentRevision);
                if (validationMessages.Length <= 0)
                {
                    var result = documentRevisionData.SaveDocumentRevision(documentRevision);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool UpdateDocumentRevision(DocumentRevision documentRevision)
        {
            try
            {
                String validationMessages = DocumentRevisionValidator.IsValidDocumentRevision(documentRevision);
                if (validationMessages.Length <= 0)
                {
                    bool result = documentRevisionData.UpdateDocumentRevision(documentRevision);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteDocumentRevisionByDRId(string dRId)
        {
            try
            {
                return documentRevisionData.DeleteDocumentRevisionByDRId(dRId);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteAllDocumentRevision(List<int> dRIds)
        {
            try
            {
                return documentRevisionData.DeleteAllDocumentRevision(dRIds);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
