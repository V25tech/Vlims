//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Sheet1.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    using VAMLIbrary.Core.Extentions;
    
    
    
    // Comment
    public static class UserGroupConfigurationConverter
    {
        
        public static List<UserGroupConfiguration> SetAllUserGroupConfiguration(DataSet dataset)
        {
            try
            {
                List<UserGroupConfiguration> result = new List<UserGroupConfiguration>();
                UserGroupConfiguration userGroupConfigurationData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        userGroupConfigurationData = new UserGroupConfiguration();
                        userGroupConfigurationData.Ugcid = Convert.ToString(row[UserGroupConfigurationConstants.Ugcid.TrimAt()]);
                        userGroupConfigurationData.Usermanagementid = Convert.ToString(row[UserGroupConfigurationConstants.Usermanagementid.TrimAt()]);
                        userGroupConfigurationData.Usergroupname = Convert.ToString(row[UserGroupConfigurationConstants.Usergroupname.TrimAt()]);
                        userGroupConfigurationData.Code = Convert.ToString(row[UserGroupConfigurationConstants.Code.TrimAt()]);
                        userGroupConfigurationData.Users = Convert.ToString(row[UserGroupConfigurationConstants.Users.TrimAt()]);
                        userGroupConfigurationData.Totalusers = DatatypeConverter.SetIntValue(row[UserGroupConfigurationConstants.Totalusers.TrimAt()]);
                        userGroupConfigurationData.CreatedBy = Convert.ToString(row[UserGroupConfigurationConstants.CreatedBy.TrimAt()]);
                        userGroupConfigurationData.CreatedDate = DatatypeConverter.SetDateTime(row[UserGroupConfigurationConstants.CreatedDate.TrimAt()]);
                        userGroupConfigurationData.ModifiedBy = Convert.ToString(row[UserGroupConfigurationConstants.ModifiedBy.TrimAt()]);
                        userGroupConfigurationData.ModifiedDate = DatatypeConverter.SetDateTime(row[UserGroupConfigurationConstants.ModifiedDate.TrimAt()]);
                        result.Add(userGroupConfigurationData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static UserGroupConfiguration SetUserGroupConfiguration(DataSet dataset)
        {
            var result = SetAllUserGroupConfiguration(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
        
        public static DataTable SetDataSet(List<UserGroupConfiguration> userGroupConfigurations)
        {
            DataTable dataTable = new DataTable();
            DataRow row = null;
            SetDataTableColumns(dataTable);
            try
            {
                if (userGroupConfigurations != null && userGroupConfigurations.Count > 0)
                {
                    for (int i = 0; (i < userGroupConfigurations.Count); i = (i + 1))
                    {
                        row = dataTable.NewRow();
                        row[UserGroupConfigurationConstants.Ugcid.TrimAt()] = userGroupConfigurations[i].Ugcid;
                        row[UserGroupConfigurationConstants.Usermanagementid.TrimAt()] = userGroupConfigurations[i].Usermanagementid;
                        row[UserGroupConfigurationConstants.Usergroupname.TrimAt()] = userGroupConfigurations[i].Usergroupname;
                        row[UserGroupConfigurationConstants.Code.TrimAt()] = userGroupConfigurations[i].Code;
                        row[UserGroupConfigurationConstants.Users.TrimAt()] = userGroupConfigurations[i].Users;
                        row[UserGroupConfigurationConstants.Totalusers.TrimAt()] = userGroupConfigurations[i].Totalusers;
                        row[UserGroupConfigurationConstants.CreatedBy.TrimAt()] = userGroupConfigurations[i].CreatedBy;
                        row[UserGroupConfigurationConstants.CreatedDate.TrimAt()] = userGroupConfigurations[i].CreatedDate;
                        row[UserGroupConfigurationConstants.ModifiedBy.TrimAt()] = userGroupConfigurations[i].ModifiedBy;
                        row[UserGroupConfigurationConstants.ModifiedDate.TrimAt()] = userGroupConfigurations[i].ModifiedDate;
                        dataTable.Rows.Add(row);
                    }
                }
                return dataTable;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        private static void SetDataTableColumns(DataTable dataTable)
        {
            dataTable.TableName = "UT_UserGroupConfiguration_PSY";
            dataTable.Columns.Add(UserGroupConfigurationConstants.Ugcid.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.Usermanagementid.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.Usergroupname.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.Code.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.Users.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.Totalusers.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.CreatedBy.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.CreatedDate.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.ModifiedBy.TrimAt());
            dataTable.Columns.Add(UserGroupConfigurationConstants.ModifiedDate.TrimAt());
        }
    }
}
