//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Sheet1.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    using VAMLIbrary.Core.Validators;
    
    
    // Comment
    public static class workflowconigurationValidator
    {
        
        public static string IsValidworkflowconiguration(workflowconiguration workflowconiguration)
        {
            try
            {
                StringBuilder validationMessages = new StringBuilder();
                ValidationHelper validationHelper = new ValidationHelper();
                validationMessages.Append(validationHelper.NullCheckValidator(workflowconiguration.WFCId, nameof(workflowconiguration.WFCId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(workflowconiguration.WFCId,50, nameof(workflowconiguration.WFCId)));
                validationMessages.Append(validationHelper.NullCheckValidator(workflowconiguration.DocumentMasterId, nameof(workflowconiguration.DocumentMasterId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(workflowconiguration.DocumentMasterId,50, nameof(workflowconiguration.DocumentMasterId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(workflowconiguration.documentstage,50, nameof(workflowconiguration.documentstage)));
                validationMessages.Append(validationHelper.LengthCheckValidator(workflowconiguration.documenttype,50, nameof(workflowconiguration.documenttype)));
                validationMessages.Append(validationHelper.LengthCheckValidator(workflowconiguration.department,50, nameof(workflowconiguration.department)));
                validationMessages.Append(validationHelper.LengthCheckValidator(workflowconiguration.CreatedBy,100, nameof(workflowconiguration.CreatedBy)));
                validationMessages.Append(validationHelper.LengthCheckValidator(workflowconiguration.ModifiedBy,100, nameof(workflowconiguration.ModifiedBy)));
                if (!String.IsNullOrEmpty(validationMessages.ToString()))
                {
                    return Convert.ToString(validationMessages.Remove(validationMessages.ToString().LastIndexOf(','),1));
                }
                else
                {
                    return Convert.ToString(validationMessages);
                }
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
