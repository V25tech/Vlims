//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.DMS.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Vlims.Common;



    // Comment
    public class ExistingDocumentRequestService : IExistingDocumentRequestService
    {

      

        public ResponseContext<ExistingDocumentRequest> GetAllExistingDocumentRequest(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = ExistingDocumentRequestData.GetAllExistingDocumentRequest(requestContext);
                List<ExistingDocumentRequest> result = ExistingDocumentRequestConverter.SetAllExistingDocumentRequest(dataset);
                return new ResponseContext<ExistingDocumentRequest>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public ExistingDocumentRequest GetExistingDocumentRequestByEDRId(string eDRId)
        {
            try
            {
                DataSet dataset = ExistingDocumentRequestData.GetExistingDocumentRequestByEDRId(eDRId);
                ExistingDocumentRequest result = ExistingDocumentRequestConverter.SetExistingDocumentRequest(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool SaveExistingDocumentRequest(ExistingDocumentRequest existingDocumentRequest)
        {
            try
            {
                String validationMessages = ExistingDocumentRequestValidator.IsValidExistingDocumentRequest(existingDocumentRequest);
                if (validationMessages.Length <= 0)
                {
                    var result = ExistingDocumentRequestData.SaveExistingDocumentRequest(existingDocumentRequest);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool UpdateExistingDocumentRequest(ExistingDocumentRequest existingDocumentRequest)
        {
            try
            {
                String validationMessages = ExistingDocumentRequestValidator.IsValidExistingDocumentRequest(existingDocumentRequest);
                if (validationMessages.Length <= 0)
                {
                    bool result = ExistingDocumentRequestData.UpdateExistingDocumentRequest(existingDocumentRequest);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteExistingDocumentRequestByEDRId(string eDRId)
        {
            try
            {
                return ExistingDocumentRequestData.DeleteExistingDocumentRequestByEDRId(eDRId);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteAllExistingDocumentRequest(List<int> eDRIds)
        {
            try
            {
                return ExistingDocumentRequestData.DeleteAllExistingDocumentRequest(eDRIds);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
